!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=t():e.NumberFormat=t()}(this,function(){"use strict";class e{constructor(t,r){this.formatter=new Intl.NumberFormat(t,r);const i=new Intl.NumberFormat(t);this._digits=new Array(10).fill().map((e,t)=>i.format(t));const s=`[${this._digits.map(e.regExEscape).join("|")}]`,n=this.formatter.formatToParts(-10000000.1);this._minus=n.find(e=>"minusSign"===e.type).value||"-",this._group=n.find(e=>"group"===e.type).value||"",this._decimal=n.find(e=>"decimal"===e.type).value||".";let a="";this._group?a+=`(?:${s}{1,3}${e.regExEscape(this._group)})*${s}{1,3}`:a+=`${s}+`,a+=`(?:${e.regExEscape(this._decimal)}${s}+)?`;let o="^",u=!1,m=!1;n.forEach(t=>{["literal","currency"].includes(t.type)?o+=e.regExEscape(t.value):"minusSign"===t.type?(o+=`(${e.regExEscape(t.value)}?)`,u||(m=!0)):"integer"!==t.type||u||(o+=`(${a})`,u=!0)}),o+="$",this.minusIndex=m?1:2,this.numberIndex=m?2:1,this.regex=new RegExp(o)}format(e){return this.formatter.format(e)}formatToParts(e){return this.formatter.formatToParts(e)}parse(e){const t=this.regex.exec(e);if(!t)throw new Error("Invalid number string");return parseFloat(`${t[this.minusIndex]?"-":""}${t[this.numberIndex].replace(/./g,e=>this._digits.includes(e)?this._digits.indexOf(e):e===this._decimal?".":"")}`)}static regExEscape(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}}return e});