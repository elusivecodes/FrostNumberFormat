"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?module.exports=t():(void 0).NumberFormat=t()}(0,function(){return function(){function e(t,n){_classCallCheck(this,e),this.formatter=new Intl.NumberFormat(t,n);var r=new Intl.NumberFormat(t);this._digits=new Array(10).fill().map(function(e,t){return r.format(t)});var o="[".concat(this._digits.map(e.regExEscape).join("|"),"]"),i=this.formatter.formatToParts(-10000000.1);this._minus=i.find(function(e){return"minusSign"===e.type}).value||"-",this._group=i.find(function(e){return"group"===e.type}).value||"",this._decimal=i.find(function(e){return"decimal"===e.type}).value||".";var a="";this._group?a+="(?:".concat(o,"{1,3}").concat(e.regExEscape(this._group),")*").concat(o,"{1,3}"):a+="".concat(o,"+"),a+="(?:".concat(e.regExEscape(this._decimal)).concat(o,"+)?");var c="^",u=!1,s=!1;i.forEach(function(t){["literal","currency"].includes(t.type)?c+=e.regExEscape(t.value):"minusSign"===t.type?(c+="(".concat(e.regExEscape(t.value),"?)"),u||(s=!0)):"integer"!==t.type||u||(c+="(".concat(a,")"),u=!0)}),c+="$",this.minusIndex=s?1:2,this.numberIndex=s?2:1,this.regex=new RegExp(c)}return _createClass(e,[{key:"format",value:function(e){return this.formatter.format(e)}},{key:"formatToParts",value:function(e){return this.formatter.formatToParts(e)}},{key:"parse",value:function(e){var t=this,n=this.regex.exec(e);if(!n)throw new Error("Invalid number string");return parseFloat("".concat(n[this.minusIndex]?"-":"").concat(n[this.numberIndex].replace(/./g,function(e){return t._digits.includes(e)?t._digits.indexOf(e):e===t._decimal?".":""})))}}],[{key:"regExEscape",value:function(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}}]),e}()});